#! /usr/bin/env ruby-1.9.3-p392@prox

require 'webrick'
require 'webrick/ssl'
require 'webrick/httpproxy'
require 'debugger'

PLACEHOLDERS = {
  'png' => open('checker.png', 'rb') {|io| io.read},
  'jpeg' => open('checker.jpg', 'rb') {|io| io.read},
  'gif' => open('checker.gif', 'rb') {|io| io.read}
}

RESTRICTED_MIMES = %w[
  image/*
]

WHITELIST = File.readlines('../etc/squid3/acls/whitelist.txt').map do |line|
  line.chomp.split('.').delete_if {|el| el == ''}
end

handler = proc do |req, res|
  allowed = true
  req_domain = req.header['host'][0].split('.').delete_if {|el| el == ''}

  if req_domain == %w[www google com]
    #debugger
  end

  whitelisted = false
  WHITELIST.each do |wl_domain|
    if req_domain[-wl_domain.size..-1] == wl_domain
      whitelisted = true
      break
    end
  end

  if !whitelisted
    if res['content-type']
      mime_type, mime_subtype = res['content-type'].split('/')
      if RESTRICTED_MIMES.include?(res['content-type'])
        allowed = false
      else
        restricted_mime_types = RESTRICTED_MIMES.map do |mime|
          type, subtype = mime.split('/')
          next if subtype != '*'
          type
        end.compact
        allowed = false if restricted_mime_types.include?(mime_type)
      end
    end
  end

  if !allowed
    #res.body = PLACEHOLDERS[mime_subtype] || ''
    res.body = ''
  end
end

#proxy = WEBrick::HTTPProxyServer.new Port: 8000
proxy = WEBrick::HTTPProxyServer.new Port: 8000, ProxyContentHandler: handler
#proxy = MitmProxyServer.new Port: 8000, ProxyContentHandler: handler

trap 'INT'  do proxy.shutdown end
trap 'TERM' do proxy.shutdown end

proxy.start
