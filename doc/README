Notes For Sentinel (to be fleshed out later)
--------------------------------------------

- Edit /etc/sysctl.conf and set "net.ipv4.ip_forward = 1".
  - This does the "echo 1 > /proc/sys/net/ipv4/ip_forward" to enable NAT, but
    persists across reboots.

- Do some disallowed sudo command to see the actual command executed. It should
  be straight to some path, not /usr/bin/env or something like that. Once had
  sudo as a bash alias to "sudo env PATH=$PATH", and it completely messed up
  setting sudo perms on individual executables, which is necessary for the whole
  sentinel setup.

- IMHO, not worth the hassle to get sentinel running in some rvm environment.
  Just use system ruby installed from the package repos.

- At such a small scale, no need for multiple web listeners (with nginx/passenger
  or the like). Nothing wrong with firing up a single mongrel process on port 80.
  The script bin/start does just this.

- Look in the etc directory for stuff that goes in /etc on the system, or that
  generally pertains to things outside of the sentinel rails app. Some of this
  is also used by scripts in bin (i.e., firewall rules).

- To do some command-line things from the client machine through the http proxy,
  you need to set certain environment variables. For example, aptitude uses the
  http_proxy variable and heroku uses the HTTP_PROXY and HTTPS_PROXY variables.
  Other apps probably use one or the other of these as well. Note that these
  can be set in /etc/environment (especially for root commands) or any other
  place environment variables get set, like bashrc.
  - Some examples:
    - sudo http_proxy="http://192.168.1.1:3128" aptitude install some_app
    - HTTP_PROXY="http://192.168.1.1:3128" heroku run console --app some_app
    - in /etc/environment:
      http_proxy="http://192.168.1.1:3128"

- Set up cron job to run bin/etc-sync each night to save any changes to the
  squid files, sudoers, etc. This cron job can go in the sentinel user's
  crontab.

- Put etc/init.d/firewall script into /etc/init.d and run something like this:
    prompt$ sudo update-rc.d firewall defaults 10
